{
  "version": 3,
  "file": "winPackager.js",
  "sourceRoot": "",
  "sources": [
    "../src/winPackager.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import { downloadCertificate } from \"./codeSign\"\nimport { Promise as BluebirdPromise } from \"bluebird\"\nimport { PlatformPackager, BuildInfo } from \"./platformPackager\"\nimport { Platform, WinBuildOptions } from \"./metadata\"\nimport * as path from \"path\"\nimport { log, statOrNull, use } from \"./util\"\nimport { readFile, deleteFile, stat, rename, copy, emptyDir, writeFile, open, close, read } from \"fs-extra-p\"\nimport { sign } from \"signcode-tf\"\n\n//noinspection JSUnusedLocalSymbols\nconst __awaiter = require(\"./awaiter\")\n\nexport class WinPackager extends PlatformPackager<WinBuildOptions> {\n  certFilePromise: Promise<string>\n\n  extraNuGetFileSources: Promise<Array<string>>\n\n  loadingGifStat: Promise<string>\n\n  readonly iconPath: Promise<string>\n\n  constructor(info: BuildInfo, cleanupTasks: Array<() => Promise<any>>) {\n    super(info)\n\n    if (this.options.cscLink != null && this.options.cscKeyPassword != null) {\n      this.certFilePromise = downloadCertificate(this.options.cscLink)\n        .then(path => {\n          cleanupTasks.push(() => deleteFile(path, true))\n          return path\n        })\n    }\n    else {\n      this.certFilePromise = BluebirdPromise.resolve(null)\n    }\n\n    this.iconPath = this.getValidIconPath()\n\n    if (this.options.dist && (this.customBuildOptions == null || this.customBuildOptions.loadingGif == null)) {\n      const installSpinnerPath = path.join(this.buildResourcesDir, \"install-spinner.gif\")\n      this.loadingGifStat = statOrNull(installSpinnerPath)\n        .then(it => it != null && !it.isDirectory() ? installSpinnerPath : null)\n    }\n  }\n\n  get platform() {\n    return Platform.WINDOWS\n  }\n\n  private async getValidIconPath(): Promise<string> {\n    const iconPath = path.join(this.buildResourcesDir, \"icon.ico\")\n    await checkIcon(iconPath)\n    return iconPath\n  }\n\n  async pack(outDir: string, arch: string, postAsyncTasks: Array<Promise<any>>): Promise<any> {\n    // we must check icon before pack because electron-packager uses icon and it leads to cryptic error message \"spawn wine ENOENT\"\n    await this.iconPath\n\n    if (!this.options.dist) {\n      return await super.pack(outDir, arch, postAsyncTasks)\n    }\n\n    const appOutDir = this.computeAppOutDir(outDir, arch)\n    const installerOut = computeDistOut(outDir, arch)\n    log(\"Removing %s\", installerOut)\n    await BluebirdPromise.all([\n      this.packApp(this.computePackOptions(outDir, arch), appOutDir),\n      emptyDir(installerOut)\n    ])\n\n    const extraResources = await this.copyExtraResources(appOutDir, arch)\n    if (extraResources.length > 0) {\n      this.extraNuGetFileSources = BluebirdPromise.map(extraResources, file => {\n        return stat(file)\n          .then(it => {\n            const relativePath = path.relative(appOutDir, file)\n            const src = it.isDirectory() ? `${relativePath}${path.sep}**` : relativePath\n            return `<file src=\"${src}\" target=\"lib\\\\net45\\\\${relativePath.replace(/\\//g, \"\\\\\")}\"/>`\n          })\n      })\n    }\n\n    if (this.options.dist) {\n      postAsyncTasks.push(this.packageInDistributableFormat(outDir, appOutDir, arch))\n    }\n  }\n\n  protected async packApp(options: any, appOutDir: string) {\n    await super.packApp(options, appOutDir)\n\n    if (process.platform === \"darwin\" && this.options.cscLink != null && this.options.cscKeyPassword != null) {\n      const filename = this.appName + \".exe\"\n      log(`Signing ${filename}`)\n      await BluebirdPromise.promisify(sign)({\n        path: path.join(appOutDir, filename),\n        cert: await this.certFilePromise,\n        password: this.options.cscKeyPassword,\n        name: this.appName,\n        site: await this.computePackageUrl(),\n        hash: [\"sha256\"],\n        overwrite: true,\n      })\n    }\n  }\n\n  protected async computeEffectiveDistOptions(appOutDir: string, installerOutDir: string): Promise<any> {\n    let iconUrl = this.devMetadata.build.iconUrl\n    if (!iconUrl) {\n      use(this.customBuildOptions, it => iconUrl = it.iconUrl)\n\n      if (!iconUrl && this.info.repositoryInfo != null) {\n        const info = await this.info.repositoryInfo.getInfo(this)\n        if (info != null) {\n          iconUrl = `https://raw.githubusercontent.com/${info.user}/${info.project}/master/${this.relativeBuildResourcesDirname}/icon.ico`\n        }\n      }\n\n      if (!iconUrl) {\n        throw new Error(\"iconUrl is not specified, please see https://github.com/electron-userland/electron-builder#in-short\")\n      }\n    }\n\n    use(this.customBuildOptions, checkConflictingOptions)\n\n    const projectUrl = await this.computePackageUrl()\n    const options: any = Object.assign({\n      name: this.metadata.name,\n      productName: this.appName,\n      exe: this.appName + \".exe\",\n      title: this.appName,\n      appDirectory: appOutDir,\n      outputDirectory: installerOutDir,\n      version: this.metadata.version,\n      description: this.metadata.description,\n      authors: this.metadata.author.name,\n      iconUrl: iconUrl,\n      setupIcon: await this.iconPath,\n      certificateFile: await this.certFilePromise,\n      certificatePassword: this.options.cscKeyPassword,\n      fixUpPaths: false,\n      skipUpdateIcon: true,\n      usePackageJson: false,\n      noMsi: true,\n      extraFileSpecs: this.extraNuGetFileSources == null ? null : (\"\\n\" + (await this.extraNuGetFileSources).join(\"\\n\")),\n      extraMetadataSpecs: projectUrl == null ? null : `\\n<projectUrl>${projectUrl}</projectUrl>`,\n      sign: {\n        name: this.appName,\n        site: projectUrl,\n        hash: [\"sha256\"],\n        overwrite: true,\n      }\n    }, this.customBuildOptions)\n\n    if (this.loadingGifStat != null) {\n      options.loadingGif = await this.loadingGifStat\n    }\n\n    return options\n  }\n\n  async packageInDistributableFormat(outDir: string, appOutDir: string, arch: string): Promise<any> {\n    const installerOutDir = computeDistOut(outDir, arch)\n    await require(\"electron-winstaller-fixed\").createWindowsInstaller(await this.computeEffectiveDistOptions(appOutDir, installerOutDir))\n\n    const version = this.metadata.version\n    const archSuffix = arch === \"x64\" ? \"\" : (\"-\" + arch)\n    const releasesFile = path.join(installerOutDir, \"RELEASES\")\n    const nupkgPathOriginal = this.metadata.name + \"-\" + version + \"-full.nupkg\"\n    const nupkgPathWithArch = this.metadata.name + \"-\" + version + archSuffix + \"-full.nupkg\"\n\n    async function changeFileNameInTheReleasesFile(): Promise<void> {\n      const data = (await readFile(releasesFile, \"utf8\")).replace(new RegExp(\" \" + nupkgPathOriginal + \" \", \"g\"), \" \" + nupkgPathWithArch + \" \")\n      await writeFile(releasesFile, data)\n    }\n\n    const promises: Array<Promise<any>> = [\n      rename(path.join(installerOutDir, \"Setup.exe\"), path.join(installerOutDir, `${this.appName}Setup-${version}${archSuffix}.exe`))\n        .then(it => this.dispatchArtifactCreated(it, `${this.metadata.name}Setup-${version}${archSuffix}.exe`)),\n    ]\n\n    if (archSuffix === \"\") {\n      this.dispatchArtifactCreated(path.join(installerOutDir, nupkgPathOriginal))\n      this.dispatchArtifactCreated(path.join(installerOutDir, \"RELEASES\"))\n    }\n    else {\n      promises.push(\n        rename(path.join(installerOutDir, nupkgPathOriginal), path.join(installerOutDir, nupkgPathWithArch))\n          .then(it => this.dispatchArtifactCreated(it))\n      )\n      promises.push(\n        changeFileNameInTheReleasesFile()\n          .then(() => copy(releasesFile, path.join(installerOutDir, \"RELEASES-ia32\")))\n          .then(it => this.dispatchArtifactCreated(it))\n      )\n    }\n\n    await BluebirdPromise.all(promises)\n  }\n}\n\nasync function checkIcon(file: string): Promise<void> {\n  const fd = await open(file, \"r\")\n  const buffer = new Buffer(512)\n  try {\n    await read(fd, buffer, 0, buffer.length, 0)\n  }\n  finally {\n    await close(fd)\n  }\n\n  const sizes = parseIco(buffer)\n  for (let size of sizes) {\n    if (size.w >= 256 && size.h >= 256) {\n      return\n    }\n  }\n\n  throw new Error(\"Windows icon image size must be at least 256x256\")\n}\n\ninterface Size {\n  w: number\n  h: number\n}\n\nfunction parseIco(buffer: Buffer): Array<Size> {\n  if (!isIco(buffer)) {\n    throw new Error(\"buffer is not ico\")\n  }\n\n  const n = buffer.readUInt16LE(4)\n  const result = new Array<Size>(n)\n  for (let i = 0; i < n; i++) {\n    result[i] = {\n      w: buffer.readUInt8(6 + i * 16) || 256,\n      h: buffer.readUInt8(7 + i * 16) || 256,\n    }\n  }\n  return result\n}\n\nfunction isIco(buffer: Buffer): boolean {\n  return buffer.readUInt16LE(0) === 0 && buffer.readUInt16LE(2) === 1\n}\n\nexport function computeDistOut(outDir: string, arch: string): string {\n  return path.join(outDir, \"win\" + (arch === \"x64\" ? \"-x64\" : \"\"))\n}\n\nfunction checkConflictingOptions(options: any) {\n  for (let name of [\"outputDirectory\", \"appDirectory\", \"exe\", \"fixUpPaths\", \"usePackageJson\", \"extraFileSpecs\", \"extraMetadataSpecs\", \"skipUpdateIcon\", \"setupExe\"]) {\n    if (name in options) {\n      throw new Error(`Option ${name} is ignored, do not specify it.`)\n    }\n  }\n\n  const noMsi = options.noMsi\n  if (noMsi != null && typeof noMsi !== \"boolean\") {\n    throw new Error(`noMsi expected to be boolean value, but string '\"${noMsi}\"' was specified`)\n  }\n}"
  ]
}
